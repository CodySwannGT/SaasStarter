{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "dev-serverless": "serverless offline start --noTimeout",
    "dev": "nest start --tsc --watch --log verbose",
    "build": "tsc -p tsconfig.build.json",
    "start": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; nodemon --exec IS_OFFLINE=true sls offline start --noTimeout --stage ${STAGE:-dev}",
    "execute": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; IS_OFFLINE=true bun run ./src/console.ts",
    "test": "jest --forceExit --passWithNoTests",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "types:check": "tsc --noEmit",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "format": "prettier --write \"src/**/*.ts\"",
    "debug": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev} --overwrite false; export SLS_DEBUG=* && node --inspect /usr/local/bin/serverless offline --stage ${STAGE:-dev}",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "generate:typings": "bun run generate-typings",
    "typeorm": "bun run ./node_modules/typeorm/cli",
    "migration:run": "sls export-env --stage ${STAGE:-dev}; rm -rf .build; bun run build; IS_OFFLINE=true bun run typeorm migration:run -d ./src/config/typeorm.config.ts",
    "migration:generate": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; rm -rf .build; bun run build; IS_OFFLINE=true bun run typeorm migration:generate ./src/database/migrations/$NAME -d ./src/config/typeorm.config.ts",
    "migration:create": "bun run typeorm migration:create ./src/database/migrations/$NAME",
    "migration:revert": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; bun run build; IS_OFFLINE=true bun run typeorm -d ./src/config/typeorm.config.ts migration:revert",
    "migration:run:local": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; rm -rf .build; bun run build; bun run typeorm migration:run -d ./src/config/typeorm.config.local.ts",
    "migration:run:remote:local": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; rm -rf .build; bun run build; bun run typeorm migration:run -d ./src/config/typeorm.config.ts",
    "migration:revert:remote:local": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; rm -rf .build; bun run build; bun run typeorm -d ./src/config/typeorm.config.ts migration:revert",
    "migration:generate:local": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; rm -rf .build; bun run build; bun run typeorm migration:generate ./src/database/migrations/$NAME -d ./src/config/typeorm.config.local.ts",
    "migration:revert:local": "eval \"$(aws configure export-credentials --profile {{PROJECT_SLUG}}-${STAGE:-dev}-v2 --format env)\"; sls export-env --stage ${STAGE:-dev}; rm -rf .build; bun run build; bun run typeorm -d ./src/config/typeorm.config.local.ts migration:revert",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org {{GITHUB_ORG_NAME}} --project backend-v2 ./.build && sentry-cli sourcemaps upload --org {{GITHUB_ORG_NAME}} --project backend-v2 ./.build"
  },
  "dependencies": {
    "@apollo/server": "^4.10.5",
    "@aws-sdk/client-apigatewaymanagementapi": "^3.738.0",
    "@aws-sdk/client-appconfig": "^3.734.0",
    "@aws-sdk/client-appconfigdata": "^3.696.0",
    "@aws-sdk/client-cloudwatch": "^3.624.0",
    "@aws-sdk/client-cognito-identity-provider": "^3.621.0",
    "@aws-sdk/client-dynamodb": "^3.624.0",
    "@aws-sdk/client-lambda": "^3.624.0",
    "@aws-sdk/client-pinpoint-sms-voice-v2": "^3.777.0",
    "@aws-sdk/client-s3": "^3.735.0",
    "@aws-sdk/client-ses": "^3.621.0",
    "@aws-sdk/client-sns": "^3.624.0",
    "@aws-sdk/client-sts": "^3.632.0",
    "@aws-sdk/lib-dynamodb": "^3.624.0",
    "@aws-sdk/rds-signer": "^3.621.0",
    "@aws-sdk/s3-request-presigner": "^3.621.0",
    "@graphql-tools/utils": "10.3.4",
    "@nestjs/apollo": "^12.2.0",
    "@nestjs/axios": "^3.0.2",
    "@nestjs/cache-manager": "^2.2.2",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^10.0.0",
    "@nestjs/graphql": "^12.2.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/typeorm": "^10.0.2",
    "@ntegral/nestjs-sentry": "^4.0.1",
    "@sentry/cli": "^2.29.1",
    "@sentry/hub": "^7.82.0",
    "@sentry/node": "7.117.0",
    "@sentry/profiling-node": "^7.102.1",
    "@vendia/serverless-express": "^4.12.6",
    "aws-jwt-verify": "^4.0.1",
    "aws-lambda": "^1.0.7",
    "aws-xray-sdk": "^3.10.3",
    "axios": "^1.7.2",
    "cache-manager-redis-yet": "^5.1.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "csv-parse": "^5.5.6",
    "dataloader": "^2.2.2",
    "dotenv": "^16.4.5",
    "expo-server-sdk": "^3.13.0",
    "express": "^4.19.2",
    "graphql": "^16.9.0",
    "graphql-relay": "^0.10.2",
    "graphql-scalars": "^1.23.0",
    "graphql-type-json": "^0.3.2",
    "mime-types": "^2.1.35",
    "nestjs-graphql-relay": "^10.5.0",
    "pg": "^8.12.0",
    "redis": "^4.7.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.20",
    "typeorm-naming-strategies": "^4.1.0",
    "zod": "^3.24.1",
    "zod-to-json-schema": "^3.24.5"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.6.5",
    "@commitlint/config-conventional": "^17.6.5",
    "@graphql-codegen/cli": "^5.0.0",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@saas-starter/eslint-config": "*",
    "@saas-starter/prettier-config": "*",
    "@saas-starter/tsconfig": "*",
    "@types/aws-lambda": "^8.10.143",
    "@types/express": "^4.17.17",
    "@types/graphql-type-json": "^0.3.5",
    "@types/jest": "^29.5.2",
    "@types/mime-types": "^2.1.4",
    "@types/node": "^22.1.0",
    "@types/snowflake-sdk": "1.6.14",
    "@types/supertest": "^6.0.0",
    "commitizen": "^4.3.0",
    "cz-conventional-changelog": "^3.3.0",
    "dotenv-cli": "^7.4.2",
    "eslint": "^8.42.0",
    "husky": "^9.1.4",
    "jest": "^29.5.0",
    "lint-staged": "^15.0.2",
    "nodemon": "^3.1.4",
    "npm-check": "^6.0.1",
    "prettier": "^3.2.5",
    "serverless": "4",
    "serverless-export-env": "^2.2.0",
    "serverless-offline": "^14.0.0",
    "serverless-plugin-common-excludes": "^4.0.0",
    "serverless-plugin-warmup": "^8.3.0",
    "serverless-prune-plugin": "^2.0.2",
    "source-map-support": "^0.5.21",
    "standard-version": "^9.5.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-morph": "^23.0.0",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.5.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "eslint --quiet --cache --fix"
    ],
    "*.{json,js,ts,jsx,tsx,html}": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">= 20.0.0"
  },
  "packageManager": "yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e"
}
